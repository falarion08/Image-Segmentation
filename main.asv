% Read image file
rgbImage = imread('leafSmall.bmp');

% Get green component of the RGB image
gComponent = rgbImage(:,:,2);

%Convert RGB image to grayscale image
gray_img = im2gray(rgbImage);

% Normalize image
normalizedImg = abs(gComponent- gray_img) ; 
% 
% % Get binary image
% binaryImage = im2Binary(normalizedImg,6.5,25);
% 
% % Show histogram of the normalized image
% subplot(1,3,1)
% histogram(normalizedImg,256); 
% xlabel('Intensity');
% ylabel('Frequency');
% title('Normalized Histogram');
% 
% % Show normalized image
% subplot(1,3,2)
% imshow(normalizedImg,'InitialMagnification', 800);
% title('Normalized Image');
% 
% % Show binary image
% subplot(1,3,3)
% imshow(binaryImage,'InitialMagnification', 800);
% title('Binary Image');

hsvImage = rgb2hsv(rgbImage);
subplot(1,2,1)
imshow(rgbImage);
subplot(1,2,2)
newImage = hsvGreen(hsvImage); 
imshow(newImage);



% Global Thresholding of grayscale image
function binarizedImage = im2Binary(img, T_lower, T_upper)
    binarizedImage = img; 
    imgShape = size(img); 
    rows = imgShape(1);
    cols = imgShape(2); 

    for i = 1: rows
        for j = 1 : cols
            if ((binarizedImage(i,j) <= T_upper && binarizedImage(i,j) >= T_lower))
                binarizedImage(i,j) = 255;
            else
                binarizedImage(i,j)= 0;
            end
        end
    end
end

function img = hsvGreen(hsvImage)
    img = zeros(size(hsvImage));

    G_LOWER = 62 / 360;
    G_UPPER = 135 / 360;

    imgShape = size(img);

    rows = imgShape(1);
    cols = imgShape(2);

    sa

    for(i=1:rows)
        for(j=1:cols)
            hue = hsvImage(i,j,1);
            sat = hsvImage(i,j,2);
            val = hsvImage(i,j,3);

            if(hue >= G_LOWER && hue <= G_UPPER && hsvImage(i,j,2) >= 0.15 && sat >= 0.16 && val >= 0.30)
                img(i,j,:) = 255;
            end
        end
    end
end